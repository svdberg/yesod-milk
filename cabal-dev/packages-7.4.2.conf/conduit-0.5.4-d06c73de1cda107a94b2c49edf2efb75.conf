name: conduit
version: 0.5.4
id: conduit-0.5.4-d06c73de1cda107a94b2c49edf2efb75
license: BSD3
copyright:
maintainer: michael@snoyman.com
stability:
homepage: http://github.com/snoyberg/conduit
package-url:
synopsis: Streaming data processing library.
description: @conduit@ is a solution to the streaming data problem, allowing for production, transformation, and consumption of streams of data in constant memory. It is an alternative to lazy I\/O which guarantees deterministic resource handling, and fits in the same general solution space as @enumerator@/@iteratee@ and @pipes@. For a brief tutorial, please see the "Data.Conduit" module.
             .
             Release history:
             .
             [0.5] The internals of the package are now separated to the .Internal module, leaving only the higher-level interface in the advertised API. Internally, switched to a @Leftover@ constructor and slightly tweaked the finalization semantics.
             .
             [0.4] Inspired by the design of the pipes package: we now have a single unified type underlying @Source@, @Sink@, and @Conduit@. This type is named @Pipe@. There are type synonyms provided for the other three types. Additionally, @BufferedSource@ is no longer provided. Instead, the connect-and-resume operator, @$$+@, can be used for the same purpose.
             .
             [0.3] ResourceT has been greatly simplified, specialized for IO, and moved into a separate package. Instead of hard-coding ResourceT into the conduit datatypes, they can now live around any monad. The Conduit datatype has been enhanced to better allow generation of streaming output. The SourceResult, SinkResult, and ConduitResult datatypes have been removed entirely.
             .
             [0.2] Instead of storing state in mutable variables, we now use CPS. A @Source@ returns the next @Source@, and likewise for @Sink@s and @Conduit@s. Not only does this take better advantage of GHC\'s optimizations (about a 20% speedup), but it allows some operations to have a reduction in algorithmic complexity from exponential to linear. This also allowed us to remove the @Prepared@ set of types. Also, the @State@ functions (e.g., @sinkState@) use better constructors for return types, avoiding the need for a dummy state on completion.
             .
             [0.1] @BufferedSource@ is now an abstract type, and has a much more efficient internal representation. The result was a 41% speedup on microbenchmarks (note: do not expect speedups anywhere near that in real usage). In general, we are moving towards @BufferedSource@ being a specific tool used internally as needed, but using @Source@ for all external APIs.
             .
             [0.0] Initial release.
category: Data, Conduit
author: Michael Snoyman
exposed: True
exposed-modules: Data.Conduit Data.Conduit.Binary Data.Conduit.Text
                 Data.Conduit.List Data.Conduit.Lazy Data.Conduit.Internal
                 Data.Conduit.Util
hidden-modules: System.PosixFile Data.Conduit.Util.Source
                Data.Conduit.Util.Sink Data.Conduit.Util.Conduit
trusted: False
import-dirs: /Users/svdberg/Documents/Projects/Haskell/milkmachine/cabal-dev//lib/conduit-0.5.4/ghc-7.4.2
library-dirs: /Users/svdberg/Documents/Projects/Haskell/milkmachine/cabal-dev//lib/conduit-0.5.4/ghc-7.4.2
hs-libraries: HSconduit-0.5.4
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: base-4.5.1.0-81d626fb996bc7e140a3fd4481b338cd
         bytestring-0.9.2.1-0044644a71adfe5e950e6c6f6ca13065
         containers-0.4.2.1-75f143aa39a3e77a1ce2300025bdd8ce
         lifted-base-0.2-5f95c7bf57a05e31977689c9709fca69
         monad-control-0.3.1.4-83560fedcd54bda582bc1867a61c5f8a
         resourcet-0.4.2-1ba3cd01d549de36b708864effa65f70
         text-0.11.2.3-473d9a1761b27c7315f2ef4569d93c3c
         transformers-0.3.0.0-8e66ecc7d4dae2b07b2b5406908c70e4
         transformers-base-0.4.1-8ce92ed550a5d340c6fea5db639117cb
         void-0.5.8-c8900b8468055c6fd3782c60be06ebd7
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /Users/svdberg/Documents/Projects/Haskell/milkmachine/cabal-dev//share/doc/conduit-0.5.4/html/conduit.haddock
haddock-html: /Users/svdberg/Documents/Projects/Haskell/milkmachine/cabal-dev//share/doc/conduit-0.5.4/html
